{
    // Per-project settings can be set in .sublime-project file

    //////////////////////
    // Javatar Settings //
    //////////////////////

    // Debugging purpose:
    "debug_mode" : false,

    // Javatar general purpose value
    "javatar_gp": 0,

    // Package Subscription:
    //    dev = Developer release (contains new features, bugs and also debugging messages enabled)
    //    otherwise = Stable release (safe to use, only stable features enabled)
    "package_channel" : "stable",

    // Automatically send statistics and usages informations
    "send_stats_and_usages" : true,

    // Update message id
    //    -1 = Unsubscribe to important Javatar updates notification (you should check out the JavatarDoc for any update information)
    //    any other number = Assigned by Javatar to show you a proper update message
    "message_id" : 0,

    // Enable Actions History to helps developer solve the issue
    "enable_actions_history" : true,

    // Maximum waiting time for Javatar packages creation (in seconds)
    "maximum_waiting_time": 15,

    // Default delay before hide a status text (in milliseconds)
    "status_delay" : 5000,

    // Allow Javatar to update project data for restoration
    "allow_project_restoration": true,

    // Time interval to update project data for restoration (in milliseconds)
    "project_update_interval": 60000,

    // Show package path in status bar
    "show_package_path" : true,

    // Source folder (used as default package), must specified in full path
    // Default is one of...
    //    - Project-based source folder
    //    - Top most directory/folder
    //    - Current directory/folder
    "source_folder" : "",

    // Dependency .jar files, use when build
    "dependencies" : [],

    // Initial directory for finding dependencies
    "dependencies_path" : "$project_dir",

    // Show hidden files and directories for browsing dependencies
    "show_hidden_files_and_directories": false,

    ///////////////////
    // Java Settings //
    ///////////////////

    // JDK installation path, should contains "jdk1.<major>.0_<minor>" folder or similar
    // Javatar will use this path to detect your JDK installations and let's you select version you want to use
    // Name should be your os name that get from sublime.platform(), value is a list of path of JDK
    // Javatar will use current JDK that you are using, otherwise it will use latest version you have
    //
    // References: http://docs.oracle.com/javase/8/docs/technotes/guides/install/index.html
    "jdk_installation" : {
        "osx" : ["/Library/Java/JavaVirtualMachines"],
        "windows" : ["C:\\Program Files\\Java", "C:\\Program Files (x86)\\Java"],
        "linux" : ["/usr/jdk"],
        "all" : ["/usr/jdk"]
    },

    // List of JDK path that Javatar detected and currently use
    // This should be READ-ONLY unless you know what you are doing
    "jdk_version" : {},

    // Executables that Javatar use to build and run
    "java_executables" : {
        "build" : "javac",
        "run" : "java",
        "version": "java"
    },

    ////////////////////////////
    // Run and Build Settings //
    ////////////////////////////

    // Enable automatic save before build
    "automatic_save" : false,

    // Location to run "run" command
    "run_location" : "$project_dir",

    // Program arguments to pass to the main executed on the "run" command
    "program_arguments" : "",

    // Run command
    "run_command" : "$classpath $full_class_path $program_arguments",

    // Amount from bottom to snap into autoscrolling area
    // Increase this number if autoscroll is not working properly
    "autoscroll_snap_range": 1,

    // Always scroll view to bottom in output window
    "autoscroll_to_bottom": true,

    // Location to run "build" command
    "build_location" : "$project_dir",

    // Build output (class files) location
    //    Specified here and Javatar will create target path and reference by -d flag in build_command
    //    "javac" don't create target directory as default
    //    In this case, "%project_directory%/bin"
    "build_output_location" : "$project_dir$sepbin",

    // Build command
    "build_command" : "$sourcepath $classpath $d \"$file\" -Xlint:all",

    // Number of build thread
    //    Increase this value can helps building done faster but also use more performances
    "parallel_build" : 2,

    // Build log view creation delay (in second)
    //    Increase this value can helps prevent double view from showing but also freeze computer for a specified time
    "build_log_delay" : 0.05,

    // Show build logs in specified group and index (prioritize from top to bottom)
    //    Specified a number view will move the build logs to target group
    //    Specified a list of one number will move the build logs to target group
    //    Specified a list of two numbers will move the build logs to target group and target index
    //    If specified target group is not found, the next group index is used.
    //        Otherwise, the build logs will show on current group instead
    //    If specified target index is not found, the build logs will show on target group as a new view
    //    If both target group and index is not found, the build logs will show on current group instead
    //    All groups and indices are zero-based
    //    Run -- window.run_command("javatar_view") -- in console to show view group and index
    "build_log_target_group": [
    ],

    // Show running console in specified group and index (same format as build_log_delay)
    "output_console_target_group": [
    ],

    // Refresh rate for Javatar shell (in second)
    //    Increase this value can helps shell output to print more smoothly but it's also affect the system performances
    "shell_refresh_interval": 0.01,

    // Error handler on output encoding
    //    ignore = Remove all invalid encoding character
    //    replace = Replace all invalid encoding character with "?" symbol
    // Change this value without knowing what you're doing is not a good idea
    "encoding_handle": "replace",

    //////////////////////////////////
    // Javatar Validations Settings //
    //////////////////////////////////

    // Java file extensions
    "java_extensions" : [".java"],

    // Java source code validation using scope selector
    "java_source_selector" : "source.java",

    // Java version matching using RegEx (get from java -version)
    "java_version_match" : "(\\d+.\\d+.\\d+)_?([0-9a-zA-Z]+)?",

    // Method call replacement pattern using RegEx (Use in completions)
    "method_replacement" : "\\(.*?\\)(?![,\\)])",

    // Package validation using RegEx
    "package_name_match" : "^([a-zA-Z_\\-$][a-zA-Z\\d_\\-$]*\\.)*[a-zA-Z_$][a-zA-Z\\d_$]*$",

    // Package (with special characters) validation using RegEx
    "special_package_name_match" : "^([a-zA-Z_\\-$][a-zA-Z\\d_\\-$]*\\.)*[a-zA-Z_$][a-zA-Z\\d_$,<:]*$",

    // Package matching using RegEx
    "package_match" : "^([a-zA-Z_\\-$][a-zA-Z\\d_\\-$]*\\.)*",

    // Class in package matching using RegEx
    "package_class_match" : "([a-zA-Z_$][a-zA-Z\\d_$,<:]*)$",

    // Package in package keyword scope selector (Use in Correct Class)
    "package_name_selector" : "storage.modifier.package.java",

    // Class name scope selector (Use in Correct Class)
    "class_name_selector" : "entity.name.type.class.java",

    // Types and classes selector (Use in Organize Imports)
    "type_selectors" : "@VariableType|@StaticClassOrInterfaceType|@CatchType",

    // Declarations with children selector (Use in Organize Imports)
    "declarations_selector" : "@PackageDeclaration|>ImportDeclaration>|>ImportDeclaration",

    // Package declaration selector (Use in Organize Imports)
    "package_declaration_selector" : "@PackageDeclaration",

    // Import declaration selector (Use in Organize Imports)
    "import_declaration_selector" : "@ImportDeclaration",

    // Package name in import declaration selector (Use in Organize Imports)
    "import_package_name_selector" : ">ImportDeclaration>QualifiedName",

    //////////////////////////////////
    // Javatar Temporary Key/Value  //
    // For project data restoration //
    //////////////////////////////////
    "project_data": {}
}
